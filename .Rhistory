hist(Date)
?na.strings
??na.strings
?read.table
head(SCC)
?grep
totals <- aggregate(Emissions ~ year + type, NEI, sum)
coal <- grepl("coal", SCC$EI.Sector)
coal
unique(SCC$EI.Sector)
unique(SCC$Short.Name)
coal <- grepl("*Coal", SCC$EI.Sector)
coal
coal <- grepl("Coal", SCC$EI.Sector)
coal
summary(coal)
coal2 <- grepl("*Coal", SCC$EI.Sector)
summary(coal2)
rm(coal2)
coalsources <- SCC[coal,]
head(coalsources)
summary(SCC)
SCC
head(SCC)
head(NEI)
coalsources
totals <- aggregate(Emissions ~ year + type, NEI$SCC[coalsources], sum)
View(coalsources)
View(NEI)
View(NEI)
View(NEI)
unique(SCC$EI.Sector)
head(coalsources)
coaldata <- NEI$SCC == coalsources$SCC
coaldata <- NEI$SCC == is.any(coalsources$SCC)
?is.
?is.any
?is.unique
coaldata <- NEI$SCC == any(coalsources$SCC)
coaldata <- NEI[NEI$SCC %in% coalsources$SCC]
coaldata <- NEI[NEI$SCC %in% coalsources$SCC,]
head(coaldata)
totals <- aggregate(Emissions ~ year + type, coaldata, sum)
ggplot(totals, aes(x=factor(year), y=Emissions, fill = type)) +
geom_bar(stat="identity") +
facet_grid(. ~ type) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Baltimore City Total PM2.5 Emissions by Source")
library(ggplot2)
install.packages(ggplto2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(totals, aes(x=factor(year), y=Emissions, fill = type)) +
geom_bar(stat="identity") +
facet_grid(. ~ type) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Baltimore City Total PM2.5 Emissions by Source")
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Baltimore City Total PM2.5 Emissions by Source")
totals
totals <- aggregate(Emissions ~ year, coaldata, sum)
png("plot4.png",width=480,height=480,units="px",bg="transparent")
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Emissions from Coal Combustion across the US")
dev.off()
names(SCC)
unique(SCC$EI.Sector)
head(SCC)
View(coaldata)
vehicle <- grepl("vehicle", SCC$EI.Sector)
vehiclesources <- SCC$EI.Sector[vehicle,]
vehicledata <- NEI[NEI$SCC %in% vehiclesources$SCC,]
vehiclesources <- SCC$EI.Sector[vehicle,]
vehicle
unique(SCC$EI.Sector)
vehicle <- grepl("vehicles", SCC$EI.Sector)
summary(vehicle)
vehicle <- grepl("*vehicles", SCC$EI.Sector)
summary(vehicle)
vehicle <- grepl("Vehicles", SCC$EI.Sector)
summary(vehicle)
vehiclesources <- SCC$EI.Sector[vehicle,]
vehicledata <- NEI[NEI$SCC %in% vehiclesources$SCC,]
SCC$EI.Sector
unique(S)CC$EI.Sector
unique(SCC$EI.Sector)
summary(vehicle)
vehicle <- grepl("*Vehicles", SCC$EI.Sector)
summary(vehicle)
SCC$EI.Sector[vehicle,]
summary(NEI$SCC)
vehiclesources <- SCC$EI.Sector[vehicle,]
dim(vehicle)
dim(vehiclesources)
dim(SCC)
mobile <- grepl("Mobile", SCC$EI.Sector)
summary(vehicle)
summary(mobile)
SCC$EI.Sector[mobile,]
coalsources <- SCC$EI.Sector[coal,]
View(y_test)
View(coalsources)
coalsources <- SCC$EI.Sector[coal,]
show(coalsources)
showMethods(coalsources)
str(coalsources)
vehiclesources <- SCC[vehicle,]
vehiclesources
totals <- aggregate(Emissions ~ year, coaldata, sum)
totals <- aggregate(Emissions ~ year, vehicledata, sum)
vehicledata <- NEI[NEI$SCC %in% vehiclesources$SCC,]
totals <- aggregate(Emissions ~ year, vehicledata, sum)
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor VEhicle Emissions in Baltimore City")+
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor VEhicle Emissions in Baltimore City")
summary(vehicledata)
baltimore <- subset(NEI, fips == "24510")
vehicle <- grepl("*Vehicles", SCC$EI.Sector)
vehiclesources <- SCC[vehicle,]
vehicledata <- baltimore[baltimore$SCC %in% vehiclesources$SCC,]
totals <- aggregate(Emissions ~ year, vehicledata, sum)
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City")
source('F:/Google Drive/Coursera/RStudio/plot5.R')
png("plot5.png",width=480,height=480,units="px",bg="transparent")
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City")
dev.off()
baltimore <- subset(NEI, fips == "24510")
losangeles <- subset(NEI, fips == "06037")
vehicle <- grepl("*Vehicles", SCC$EI.Sector)
vehiclesources <- SCC[vehicle,]
baltimore.vehicledata <- baltimore[baltimore$SCC %in% vehiclesources$SCC,]
baltimore.vehicledata$Location <- "Baltimore City, MD"
la.vehicledata <- losangeles[losangeles$SCC %in% vehiclesources$SCC,]
la.vehicledata$Location <- "Los Angeles County, CA"
vehicledata <- rbind(barltimore.vehicledata, la.vehicledata)
totals <- aggregate(Emissions ~ year, vehicledata, sum)
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
facet_grid(. ~ Location) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County)
)
baltimore <- subset(NEI, fips == "24510")
losangeles <- subset(NEI, fips == "06037")
vehicle <- grepl("*Vehicles", SCC$EI.Sector)
vehiclesources <- SCC[vehicle,]
baltimore.vehicledata <- baltimore[baltimore$SCC %in% vehiclesources$SCC,]
baltimore.vehicledata$Location <- "Baltimore City, MD"
la.vehicledata <- losangeles[losangeles$SCC %in% vehiclesources$SCC,]
la.vehicledata$Location <- "Los Angeles County, CA"
vehicledata <- rbind(baltimore.vehicledata, la.vehicledata)
totals <- aggregate(Emissions ~ year, vehicledata, sum)
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
facet_grid(. ~ Location) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County)
source('F:/Google Drive/Coursera/RStudio/plot6.R')
source('F:/Google Drive/Coursera/RStudio/plot6.R')
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
facet_grid(. ~ Location) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
facet_grid(Location ~ .) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
head(vehicledata)
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
#facet_grid(. ~ Location) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
facet_grid(. ~ Location, scales="free") +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
facet_grid(. ~ fips) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
typeof(vehicle$Location)
class(vehicle$Location)
str(vehicledata)
class(vehicledata$Location)
vehicledata$Location <- as.factor(vehicledata$Location)
class(vehicledata$Location)
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
facet_grid(. ~ fips) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
facet_grid(. ~ Location) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
totals
ggplot(totals, aes(x=factor(year), y=Emissions,)) +
geom_bar(stat="identity") +
facet(. ~ Location) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
ggplot(totals, aes(x=factor(year), y=Emissions, fill = Location)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
summary(totals)
ggplot(totals, aes(x=factor(year), y=Emissions, fill = Location)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
ggplot(totals, aes(x=factor(year), y=Emissions, fill = Location)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
totals <- aggregate(Emissions ~ year, vehicledata, sum)
totals
totals <- aggregate(Emissions ~ year, + Location, vehicledata, sum)
totals <- aggregate(Emissions ~ year + Location, vehicledata, sum)
totals
ggplot(totals, aes(x=factor(year), y=Emissions, fill = Location)) +
geom_bar(stat="identity") +
facet(. ~ Location) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
ggplot(totals, aes(x=factor(year), y=Emissions, fill = Location)) +
geom_bar(stat="identity") +
facet_grid(. ~ Location) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
ggplot(totals, aes(x=factor(year), y=Emissions)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City")
baltimore <- subset(NEI, fips == "24510")
vehicle <- grepl("*Vehicles", SCC$EI.Sector)
vehiclesources <- SCC[vehicle,]
vehicledata <- baltimore[baltimore$SCC %in% vehiclesources$SCC,]
totals <- aggregate(Emissions ~ year, vehicledata, sum)
#png("plot5.png",width=480,height=480,units="px",bg="transparent")
ggplot(totals, aes(x=factor(year), y=Emissions)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City")
source('F:/Google Drive/Coursera/RStudio/plot6.R')
png("plot6.png",width=480,height=480,units="px",bg="transparent")
ggplot(totals, aes(x=factor(year), y=Emissions, fill = Location)) +
geom_bar(stat="identity") +
facet_grid(. ~ Location) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
dev.off()
png("plot6.png",width=640,height=480,units="px",bg="transparent")
ggplot(totals, aes(x=factor(year), y=Emissions, fill = Location)) +
geom_bar(stat="identity") +
facet_grid(. ~ Location) +
xlab("Year") +
ylab("PM2.5 Emissions (In Tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore City vs Los Angeles County")
dev.off()
source('F:/Google Drive/Coursera/RStudio/run_analysis_working.R')
head(subject_test)
head(subject_train)
head(x_train)
head(y_train)
library(dplyr)
install.packages("dplyr")
?require
require(dplyr)
summery(features)
summary(features)
grepl("mean", features)
extract <- grepl("mean", features)
summary(extract)
extract <- grepl("std", features)
summary(extract)
extract <- grepl("mean|std", features)
summary(extract)
mean.std <- grepl("mean|std", features)
summary(y_test)
str(y_test)
sample(y_test)
head(subject_test)
activity_labels
head(y_test)
y_test$Activity_Label <- activity_labels[y_test1]
label <- activity_labels[y_test[,1]]
label <- activity_labels[,y_test[,1]]
y_test$Activity_Labels = activity_labels[y_test[,1]]
y_test$Activity_Labels = activity_labels[,y_test[,1]]
y_test$Activity_Labels = activity_labels[y_test[,1],]
y_test
head(y_test)
names(y_test) <- "Activity_ID"
head(y_test)
y_test[,2] = activity_labels[y_test[,1],][,2]
head(y_test)
y_test$Activity_Label = activity_labels[y_test[,1],][,2]
head(y_test)
y_test$Activity_Label = activity_labels[y_test[,1],]
head(y_test)
y_test$Activity_Label = activity_labels[y_test[,1],][,2]
head(y_test)
y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
names(y_train) <- c("Activity_ID", "Activity_Label")
y_test$Activity_Label = activity_labels[y_test[,1],][,2]
head(y_test)
y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
y_test$Activity_Label = activity_labels[y_test[,1],]
head(y_test)
head(subject_test)
source('F:/Google Drive/Coursera/RStudio/run_analysis_working.R')
test_data <- cbind(subject_test, y_test, x_test)
test_data
head(test_data)
str(test_data)
test_data <- test_data[,mean.std]
head(test_data)
x_test <- x_test[,mean.std]
x_test
head(x_test)
x_train <- x_train[,mean.std]
source('F:/Google Drive/Coursera/RStudio/run_analysis_working.R')
head(test_data)
data <- rbind(test_data, train_data)
head(data)
summary(data)
str(data)
head(data)
tail(data)
unique(x_test$subject)
head(x_test)
unique(test_data$Subject)
unique(train_data$Subject)
?setdiff
datamelt <- melt(data, id = c("Subject","Activity_Label"), measure.vars = mean.std)
??melt
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
datamelt <- melt(data, id = c("Subject","Activity_Label"), measure.vars = mean.std)
features2 <- features[,mean.std]
features2 <- features[mean.std,]
head(features)
features2[,1] <- features[,mean.std]
dim(mean.std)
head(mean.std)
features2 <- features[mean.std]
features2
datamelt <- melt(data, id = c("Subject","Activity_Label"), measure.vars = features2)
head(datamelt)
datamelt <- melt(data, id = c("Subject","Activity_Label"), measure.vars = measures)
measures <- features[mean.std]
datamelt <- melt(data, id = c("Subject","Activity_Label"), measure.vars = measures)
head(datamelt)\
head(datamelt)
tidy_data <- dcast(datamelt, Subject + Activity_Label ~ variable, mean)
head(tidy_data)
summarize(tidy_data)
summarise(tidy_data)
?summarize
library
packages
packages()
library()
installed.packages
head(tidy_data)
tapply(tidy_data[,measures] ,tidy_data$Activity_Label, mean)
tidy_data[,measure]
tidy_data[,measures]
measures
tidy_data[,mean.std]
tidy_data[mean.std,]
tapply(tidy_data[measures,] ,tidy_data$Activity_Label, mean)
tapply(tidy_data[mean.std,] ,tidy_data$Activity_Label, mean)
x_test[,mean.std]
View(y_test)
feautres
features
features2
tindy_data[features]
tidy_data[features]
tidy_data[,features]
tidy_data$features
tidy2 <- tidy_data[mean.std]
tidy_data
dim(tidy_data)
?write.table
write.table(tidy_data, file = "tidy_data.txt")
write.table(tidy_data, file = "tidy_data.txt", row.name=FALSE)
tidy_data <- dcast(datamelt, Subject + Activity_Label ~ variable, mean)
env()
global()
packages()
summary(tidy_data$Subject)
summary(tidy_data)
head(tidy_data)
source("run_analysis.R")
head(tidy_data)
tidy_data
head(datamelt)
head(tidy_data)
head(data)
tidy_data <- dcast(datamelt, Subject + Activity_Label ~ variable, mean)
source('F:/Google Drive/Coursera/RStudio/run_analysis.R')
head(tidy_data[,1:5])
head(datamelt[,1:5])
head(datamelt)
head(datamelt$Subject==1)
head(datamelt$Subject==1[1:10,])
head(datamelt$Subject==1[1:5,])
head(datamelt$Subject==1[1,])
head(datamelt[,1]==1)
head(which(datamelt[,1]==1)
)
head(which(datamelt[2948:2953])
head(datamelt[2948:2953])
head(datamelt[2948:2953,])
head(tidy_data[,1:5])
mean(datamelt[2948:2953])
mean(datamelt[2948:2953,])
mean(datamelt[,3][2948:2953,])
mean(datamelt[,3])[2948:2953,]
which(datamelt[2948:2953,], mean(datamelt[,3])
)
setwd(./RepData_PeerAssessment1)
setwd("./RepData_PeerAssessment1")
setwd("F:/Dropbox/Coursera/RStudio/RepData_PeerAssessment1")
getwd()
load("F:/Dropbox/Coursera/RStudio/RepData_PeerAssessment1/.RData")
View(newdf)
View(activity)
sum(is.na(newdf))
for (i in 1:nrow(activity)) {
if (is.na(activity$steps[i])){
newdf[i,]$steps <- stepsInterval(activity[i,])$interval
}
}
for (i in 1:nrow(activity)) {
if (is.na(activity$steps[i])){
newdf[i,]$steps <- stepsInterval[activity[i,]])$interval
}
}
for (i in 1:nrow(activity)) {
if (is.na(activity$steps[i])){
newdf[i,]$steps <- stepsInterval[activity[i,]]$interval
}
}
for (i in 1:nrow(activity)) {
if (is.na(activity$steps[i])){
newdf[i,]$steps <- stepsInterval[activity[i,]]$interval
}
}for (i in 1:nrow(activity)) {
if (is.na(activity$steps[i])){
newdf[i,]$steps <- stepsInterval[activity$interval==stepsInterval$interval]$steps
}
}
for (i in 1:nrow(activity)) {
if (is.na(activity$steps[i])){
newdf[i,]$steps <- with(stepsInterval, steps[interval==newdf$interval[i]])
}
}
sum(is.na(newdf))
tail(newdf)
getwd()
